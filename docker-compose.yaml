services:
  app:
    image: duyanhit/ticket-box-be:latest
    container_name: ticket-box-be
    env_file: .env
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbit
      - redis
    volumes:
      - ./public:/app/public
    networks:
      - app
      - postgres
      - redis
      - rabbitmq
      - ngrok

  postgres:
    image: postgres:17
    container_name: ticket-box-postgres
    env_file: .env
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - postgres

  rabbit:
    image: rabbitmq:4.1-rc-management
    container_name: ticket-box-rabbit
    env_file: .env
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - rabbitmq:/var/log/rabbitmq
    networks:
      - rabbitmq

  redis:
    image: redis:7
    container_name: ticket-box-redis
    env_file: .env
    restart: always
    volumes:
      - redis:/data
    networks:
      - redis

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ticket-box-ngrok
    env_file: .env
    command: http http://app:3000 --log=stdout
    depends_on:
      - app
    networks:
      - app

networks:
  app:
  postgres:
  redis:
  rabbitmq:
  ngrok:

volumes:
  postgres:
  rabbitmq:
  redis:
